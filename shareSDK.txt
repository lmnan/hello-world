ShareSDK
什么是ShareSDK？
ShareSDK是一种社会化分享组件，为iOS、Android、WP8 的APP提供社会化功能，集成了一些常用的类库和接口，缩短开发者的开发时间
ShareSDK移动开发者服务平台由广州掌淘网络科技有限公司开发
友盟分享模块
分享：
四个文件分别复制到 studio对应目录里面 eclipse可以直接覆盖

 asset main 目录
 res  对应res
 src  对应 src
 libs  对应libs  加入后需要同步 
 
 
 mainfast.xml
 配置权限
 复制各个平台的activity对应的
 不需要的可以直接删除
 
 替换appkey
 对应平台的appkey

oauth2.0
 
 com.qianfeng.sharedemo
 566f74b767e58ed825005f6d
 第三方登录;
 

友盟 talkingdata 数据统计
 
 推送：
 两种方法：
 第一种是客户端使用Pull（拉）的方式，就是隔一段时间就去服务器上获取一下信息，看是否有更新的信息出现。
 第二种就是服务器使用Push（推送）的方式，当服务器端有新信息了，则把最新的信息Push到客户端上。这样，客户端就能自动的接收到消息。
 
  Push是服务端主动发消息给客户端，现在有很多第三方推送框架：例如百度推送、极光推送、个推等等，都是基于之前说的第二种方式
  也就是服务器使用Push的方式。
  因为第一时间知道数据发生变化的是服务器自己，所以Push的优势是实时性高。但服务器主动推送需要单独开发一套能让客户端持久连接的服务端程序。
  但有些情况下并不需要服务端主动推送，而是在一定的时间间隔内客户端主动发起查询，这种时候就应该使用Pull的方式去获取。很多人认为Push方式没有任何消耗，
  其实不然采用Push方式需要长时间维持一条客户端与服务器端通信的socket长连接，依旧是很费流量与电量。如果轮询策略配置的好，
  消耗的电与数据流量绝不比维持一个socket连接使用的多。譬如有这样一个app，实时性要求不高，每天只要能获取10次最新数据就能满足要求了，
  这种情况显然轮询更适合一些，推送显得太浪费，而且更耗电。
 
 极光推送 
 genymotion  下载x86版本sdk 是intel
 手机下载标准版的  手机是ram
 mainfast.xml 里面for test都可以删除
 Receiver里面需要处理的就是ACTION_NOTIFICATION_OPENED一个action
 
 初始化 init() 建议写在appaction里面
 采用减法修改原来demo当中的代码，没有用的代码直接删除了 
 onResume()
 onPause()
 
 
 通知的title和icon 在manifest里面修改 
 
 自定义通知：
 CustomPushNotifictionBuilder 对象实例化的时候 参数被混淆，参照api文档顺序
 来写。
 里面的方法已经被混淆 无法再进一步自定义
 
 
 样式编号在手机端指定，在服务器发送的时候根据样式编号 显示不同的样式，
 如果在发送的时候不指定样式在使用默认样式
 如果选择的是不存在的编号在没有任何样式
 
 混淆打包、版本控制工具git，svn
 
 混淆降低代码的可读性，防止别人反编译，
 有很多代码不可以被混淆，有些可以混淆
 不可混淆：proguard-android.txt 和 proguard-project.txt指定了不可被混淆的类，文件和方法。四大组件，自定义控件，manifest里面以字符串出现的
 混淆：
 混淆打出来的包要比没有混淆打的包小很多

 minifyEnabled false  不混淆  设置true混淆
 .java -->.class的时候
 
 一个keystore 多个别名 Alias
 一个别名对应一个项目
 
 
 
 
 